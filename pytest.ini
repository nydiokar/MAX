[pytest]
# Async settings
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function
timeout = 300

# Test collection settings
testpaths = tests
pythonpath = .
norecursedirs = .* build dist CVS _darcs {arch} *.egg venv env

# Test file patterns
python_files = test_*.py
python_classes = Test
python_functions = test_*

# Custom markers
markers =
    integration: mark a test as an integration test
    unit: mark a test as a unit test
    slow: mark test as slow running
    collaboration: tests for multi-agent collaboration system
    supervisor: tests for supervisor agent functionality
    workflow: tests for workflow management
    response: tests for response aggregation
    coordination: tests for agent coordination

# Test running configuration
addopts = 
    --verbosity=2
    --showlocals
    --tb=short
    --capture=no

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning

# Coverage settings
[coverage:run]
branch = True
source = MAX

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    raise AssertionError
    raise ValueError
    if __name__ == .__main__.:

# Test environment configuration
[tool:pytest]
env =
    D:MAX_ENV=test
    D:MAX_LOG_LEVEL=DEBUG
